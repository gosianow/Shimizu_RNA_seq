library(edgeR)
targets <- data.frame(Treat = rep(c("Placebo", "Drug"), each = 6), Time = c(rep(c("0h", "1h", "2h"), each = 2), rep(c("0h", "1h", "2h"), each = 2)))
rownames(targets) <- paste(1:nrow(targets), targets$Treat, targets$Time, sep = ".")
targets$Treat <- relevel(targets$Treat, ref="Placebo")
model.matrix(~ Treat + Treat:Time, data=targets)
model.matrix(~ Treat + Time + Treat:Time, data=targets)
library(kohonen)
install.packages("kohonen")
data(wines)
set.seed(7)
kohmap <- xyf(scale(wines), classvec2classmat(wine.classes),
grid = somgrid(5, 5, "hexagonal"), rlen=100)
library(kohonen)
data(wines)
set.seed(7)
kohmap <- xyf(scale(wines), classvec2classmat(wine.classes),
grid = somgrid(5, 5, "hexagonal"), rlen=100)
plot(kohmap, type="changes")
data(wines)
set.seed(7)
training <- sample(nrow(wines), 120)
Xtraining <- scale(wines[training, ])
Xtest <- scale(wines[-training, ],
center = attr(Xtraining, "scaled:center"),
scale = attr(Xtraining, "scaled:scale"))
som.wines <- som(Xtraining, grid = somgrid(5, 5, "hexagonal"))
plot(kohmap, type="changes")
kohmap <- som.wines
plot(kohmap, type="changes")
plot(kohmap, type="codes", main = c("Codes X", "Codes Y"))
plot(kohmap, type="codes")
plot(kohmap, type="counts")
coolBlueHotRed <- function(n, alpha = 1) {
rainbow(n, end=4/6, alpha=alpha)[n:1]
}
plot(kohmap, type="quality", palette.name = coolBlueHotRed)
plot(kohmap, type="mapping",
labels = wine.classes, col = wine.classes+1,
main = "mapping plot")
xyfpredictions <- classmat2classvec(predict(kohmap)$unit.predictions)
bgcols <- c("gray", "pink", "lightgreen")
plot(kohmap, type="mapping", col = wine.classes+1,
pchs = wine.classes, bgcol = bgcols[as.integer(xyfpredictions)],
main = "another mapping plot")
set.seed(7)
sommap <- som(scale(wines), grid = somgrid(6, 4, "hexagonal"))
plot(sommap, type = "property", property = sommap$codes[,1],
main = colnames(sommap$codes)[1])
## Another way to show clustering information
plot(sommap, type="dist.neighbours", main = "SOM neighbour distances")
som.hc <- cutree(hclust(dist(sommap$codes)), 5)
add.cluster.boundaries(sommap, som.hc)
set.seed(7)
sommap <- som(scale(wines),grid = somgrid(6, 4, "rectangular"))
plot(sommap, type="dist.neighbours", main = "SOM neighbour
plot(sommap, type="dist.neighbours", main = "SOM neighbour distances")
set.seed(7)
sommap <- som(scale(wines),grid = somgrid(6, 4, "rectangular"))
plot(sommap, type="dist.neighbours", main = "SOM neighbour distances")
som.hc <- cutree(hclust(dist(sommap$codes)), 5)
add.cluster.boundaries(sommap, som.hc)
