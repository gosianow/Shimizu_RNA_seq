rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = colors()[246])
for(t in trees.order$legend){
# t=trees.order$legend[1]
lines(new.samps$time_nr[new.samps$tree_legend ==t], d.cpm.l[genes[j], new.samps$tree_legend ==t] , col=trees.order$color[trees.order$legend==t], type="b", pch=trees.order$pch[trees.order$legend==t], cex=trees.order$cex[trees.order$legend==t], lwd=3)
}
axis(side=1, at=month.days[,2], labels=month.days[,1])
legend("topright", legend = trees.order$legend, col=trees.order$color, cex=0.5, text.col=trees.order$color)
}
}
}
dev.off()
load("Shimizu_workspace.Rdata")
#elim.samps=c(flowered.samps)
elim.samps=NULL
x <- x[,!names(x) %in% elim.samps]
new.samps <- new.samps[!new.samps$sample_name %in% elim.samps, ]
all(colnames(x)==rownames(new.samps))
library(edgeR)
d.org <- DGEList(x, group=new.samps$tree_ID)
d.org <- calcNormFactors(d.org)
d.cpm <- cpm(d.org, normalized.lib.sizes=TRUE)
d.cpm.l <- log(d.cpm + min(d.cpm[d.cpm != 0]))
h(d.cpm)
AT.id <- AT.id[AT.id$ID %in% c("GID031739_3527284", "GID037469_3529277"),]
d.cpm[AT.id$ID,]
d.cpm[AT.id$ID, "E7_8266_20090416"]
trees.order <- trees.order[trees.order$legend %in% c("8266-drought-leaf_bud"), ]
load("Shimizu_workspace.Rdata")
trees.order
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
dir.create("Plots_Correlation/", showWarnings=F, recursive=T)
all(colnames(x)==rownames(new.samps))
dim(x)
library(edgeR)
d <- DGEList(x, group=new.samps$tree_ID)
d <- calcNormFactors(d)
# make sure a gene is expressed (CPM > 1) in more samples
cps <- cpm(d, normalized.lib.sizes=TRUE)
d <- d[ rowSums( cps > 10 ) > 10, ]
dim(d$counts)
d$counts  <- d$counts + 1
dcpm <- log10(cpm(d, normalized.lib.sizes=TRUE))
library(edgeR)
d <- DGEList(x, group=new.samps$tree_ID)
d <- calcNormFactors(d)
# make sure a gene is expressed (CPM > 1) in more samples
cps <- cpm(d, normalized.lib.sizes=TRUE)
d <- d[ rowSums( cps > 1 ) > 27, ]
dim(d$counts)
d$counts  <- d$counts + 1
dcpm <- log10(cpm(d, normalized.lib.sizes=TRUE))
d <- DGEList(x, group=new.samps$tree_ID)
d <- calcNormFactors(d)
# make sure a gene is expressed (CPM > 1) in more samples
cps <- cpm(d, normalized.lib.sizes=TRUE)
d <- d[ rowSums( cps > 1 ) > 53, ]
dim(d$counts)
d$counts  <- d$counts + 1
dcpm <- log10(cpm(d, normalized.lib.sizes=TRUE))
pairs <- list(c("H6_8266_20081208", "H7_8266_20081208"), c("H8_8266_20090105", "H9_8266_20090105"), c("E4_8266_20090202", "F4_8266_20090202"), c("N1_8266_20090224", "N5_8266_20090224"), c("I9_970_20081216", "J1_970_20081216"), c("J2_970_20090207", "K9_970_20090207"))
library(corrgram)
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=FALSE, lower.panel= panel.pie, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=FALSE, lower.panel=panel.pie, text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
?corrgram
library(corrgram)
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = panel.ellipse , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], pch = 3)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], pch = 5)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], cex.labels = 2)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], cex.labels = 1.2)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], cex.labels = 1)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], cex.labels = 1, col.regions=colorRampPalette(c("white","white","white","white","navy")))
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], cex.labels = 1, col.regions=rainbow)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"], cex.labels = 1, col.regions=rainbow)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"], cex.labels = 1, col.regions=rainbow)
dev.off()
pdf(paste0("Plots_Correlation/" , "Corrgram" ,".pdf"), 10, 10)
# corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("970")], order=TRUE, lower.panel= panel.pie, upper.panel = NULL, text.panel=panel.txt, main="970", labels = new.samps[new.samps$tree_ID %in% c("970"), "time_ch"],  col.regions=rainbow)
# corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt, main="", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"])
corrgram(dcpm[,new.samps$tree_ID %in% c("8266")], order=TRUE, lower.panel=panel.pie, upper.panel = NULL , text.panel=panel.txt, main="8266", labels = new.samps[new.samps$tree_ID %in% c("8266"), "time_ch"], col.regions=rainbow)
dev.off()
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
out.dir <- "Plots_VarianceMeanTrend/"
dir.create(out.dir, showWarnings=F, recursive=T)
####################################
all(colnames(x)==rownames(new.samps))
dim(x)
# new.samps[,c("sample_name","tree_ID", "time_ch")]
pairs <- list(c("H6_8266_20081208", "H7_8266_20081208"), c("H8_8266_20090105", "H9_8266_20090105"), c("E4_8266_20090202", "F4_8266_20090202"), c("N1_8266_20090224", "N5_8266_20090224"), c("I9_970_20081216", "J1_970_20081216"), c("J2_970_20090207", "K9_970_20090207"))
pairs.samps <- unlist(pairs)
library(edgeR)
d <- DGEList(x[, pairs.samps])
d <- calcNormFactors(d)
# make sure a gene is expressed (CPM > 1) in more samples
cps <- cpm(d, normalized.lib.sizes=TRUE)
# sum(rowSums( cps > 0 ) > 11)
d <- d[ rowSums( cps > 0 ) > 11, ]
dim(d$counts)
dcpm <- cpm(d, normalized.lib.sizes=TRUE)
v <- NULL
m <- NULL
for(i in 1:length(pairs)){
# i = 1
v <- c(v, apply(dcpm[, pairs[[i]]], 1, function(x) abs(diff(x))))
m <- c(m, rowMeans(dcpm[, pairs[[i]]]))
}
SDMean.lowess <- l <- lowess(m[m >=1 ],v[m >=1 ])
# s <- smooth.spline(m[m >=1 ], v[m >=1 ], spar=2/3)
s <- smooth.spline(l$x, l$y, spar=2/3)
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="sd", main = paste0(pairs[[i]], collapse = " , ") , xlim=c(0, 50), ylim=c(0, 50))
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
dev.off()
d <- unique(data.frame(mean = l$x, sd = l$y))
write.table(d, paste0(out.dir, "ABSMeanScale.txt"), quote = FALSE, row.names = FALSE)
save(s, file = paste0(out.dir, "ABSMeanScale.RData"))
s
names(s)
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="sd", main = paste0(pairs[[i]], collapse = " , ") , xlim=c(0, 100), ylim=c(0, 50))
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
lines(s$x, s$y * 3 , col = "blue")
dev.off()
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="Max - Min", main = paste0(pairs[[i]], collapse = " , ") , xlim=c(0, 100), ylim=c(0, 50))
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
lines(s$x, s$y * 3 , col = "blue", lwd = 4)
dev.off()
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="Max - Min", main = paste0(pairs[[i]], collapse = " , ") , xlim=c(0, 400), ylim=c(0, 50))
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
lines(s$x, s$y * 3 , col = "blue", lwd = 4)
dev.off()
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="Max - Min", main = paste0(pairs[[i]], collapse = " , ") , xlim=c(0, 400), ylim=c(0, 400))
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
lines(s$x, s$y * 3 , col = "blue", lwd = 4)
dev.off()
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="Max - Min", main = "", xlim=c(0, 400), ylim=c(0, 400))
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
lines(s$x, s$y * 3 , col = "blue", lwd = 4)
dev.off()
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="Max - Min", main = "", xlim=c(0, 400), ylim=c(0, 400), cex.lab = 2)
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
lines(s$x, s$y * 3 , col = "blue", lwd = 4)
dev.off()
png(paste0(out.dir, "ABSMeanScale50.png"), 600, 600)
smoothScatter( m, v , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="Max - Min", main = "", xlim=c(0, 400), ylim=c(0, 400), cex.lab = 1.6, cex.axis = 1.6)
abline(a = 0, b = 1, col = "red")
lines(l, col = "blue")
lines(s, col = "green")
lines(s$x, s$y * 3 , col = "blue", lwd = 4)
dev.off()
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
load(paste0("Plots_MeanForReplicates/" , "data.reduced" ,".RData"))
out.dir <- "Plots_PerTree_Clustering/"
dir.create(out.dir, showWarnings=F, recursive=T)
source(paste0(RPath, "Kmeans_clustering_splines.R"))
library(edgeR)
#####################################
gs.mDr <- read.table(paste0(dataPath, "GeneControlSets/gene_sets_for_Gosia/mDr_Day10_drought_down_regulated_genes_Harb_etal.csv"), header=T, sep=";")
dim(gs.mDr)
trees <- as.character(unique(new.samps.red$tree_ID))
i = 1
x <- x.red[, new.samps.red$tree_ID == trees[i]]
samps <- new.samps.red[new.samps.red$tree_ID == trees[i], ]
### Filtering
x <- x[ MinCPM.tree[, trees[i]] & FC.tree[, trees[i]] & MinABS.tree[, trees[i]], ]
print(dim(x))
trees
i = 2
x <- x.red[, new.samps.red$tree_ID == trees[i]]
samps <- new.samps.red[new.samps.red$tree_ID == trees[i], ]
### Filtering
x <- x[ MinCPM.tree[, trees[i]] & FC.tree[, trees[i]] & MinABS.tree[, trees[i]], ]
print(dim(x))
i = 3
x <- x.red[, new.samps.red$tree_ID == trees[i]]
samps <- new.samps.red[new.samps.red$tree_ID == trees[i], ]
### Filtering
x <- x[ MinCPM.tree[, trees[i]] & FC.tree[, trees[i]] & MinABS.tree[, trees[i]], ]
print(dim(x))
i = 4
x <- x.red[, new.samps.red$tree_ID == trees[i]]
samps <- new.samps.red[new.samps.red$tree_ID == trees[i], ]
### Filtering
x <- x[ MinCPM.tree[, trees[i]] & FC.tree[, trees[i]] & MinABS.tree[, trees[i]], ]
print(dim(x))
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
all(colnames(x)==rownames(new.samps))
?grepl
AT.genes <- unique(genes.full.description[!is.na(genes.full.description$Flowering), c("AT_ID", "AT_symbol")])
AT.id <- genes.full.description[!is.na(genes.full.description$AT_ID), c("ID","AT_ID")]
AT.id <- AT.id[AT.id$ID %in% c("GID031739_3527284", "GID037469_3529277"),]
elim.samps=c(flowered.samps, new.samps$sample_name[!grepl("8266", new.samps$sample_name) ])
elim.samps
AT.genes <- unique(genes.full.description[!is.na(genes.full.description$Flowering), c("AT_ID", "AT_symbol")])
AT.id <- genes.full.description[!is.na(genes.full.description$AT_ID), c("ID","AT_ID")]
AT.id <- AT.id[AT.id$ID %in% c("GID031739_3527284", "GID037469_3529277"),]
elim.samps=c(flowered.samps, new.samps$sample_name[!grepl("8266", new.samps$sample_name) ])
trees.order <- trees.order[trees.order$legend %in% c("8266-drought-leaf_bud"), ]
# elim.samps=NULL
x <- x[,!names(x) %in% elim.samps]
new.samps <- new.samps[!new.samps$sample_name %in% elim.samps, ]
all(colnames(x)==rownames(new.samps))
library(edgeR)
d.org <- DGEList(x, group=new.samps$tree_ID)
d.org <- calcNormFactors(d.org)
d.cpm <- cpm(d.org, normalized.lib.sizes=TRUE)
d.cpm.l <- log(d.cpm + min(d.cpm[d.cpm != 0]))
d.cpm[AT.id$ID, "E7_8266_20090416"]
out.dir <- "Plots_of_flowering_genes/"
dir.create(out.dir, showWarnings=F, recursive=T)
pdf(paste0(out.dir , "Flowering_genes_from_S4_table_Nov_fl" ,".pdf"), h=5, w=10)
for(g in 1:nrow(AT.genes)){
# g=1
cat(paste(g, ", "))
genes <- AT.id[AT.id[,2] == AT.genes[g, 1], 1]
if(length(genes!=0)){
for(j in 1:length(genes)){
# j=1
plot(0, type="n", main=paste0(AT.genes[g, 1] ,"\n", AT.genes[g, 2] , "\n",  genes[j]) ,xlim=c(min(new.samps$time_nr), max(new.samps$time_nr)), ylim=c(min(na.omit(d.cpm[genes[j], ])), max(na.omit(d.cpm[genes[j], ]))), xlab="Time", ylab="Gene Expression in cpm", xaxt = "n")
axis(side=1, at=month.days[,2], labels=month.days[,1])
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = colors()[246])
for(t in trees.order$legend){
# t=trees.order$legend[1]
lines(new.samps$time_nr[new.samps$tree_legend == t], d.cpm[genes[j], new.samps$tree_legend == t] , col=trees.order$color[trees.order$legend==t], type="b", pch=trees.order$pch[trees.order$legend==t], cex=trees.order$cex[trees.order$legend==t], lwd=3)
}
legend("topright", legend = trees.order$legend, col=trees.order$color, cex=0.5, text.col=trees.order$color)
}
}
}
dev.off()
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
load(paste0("Plots_MeanForReplicates/" , "data.reduced" ,".RData"))
out.dir <- "Plots_FishersTest/Athaliana_flowering_genes/"
dir.create(out.dir, showWarnings=F, recursive=T)
gene.set <- genes.full.description[!is.na(genes.full.description$Flowering), "AT_ID"]
name.out <- "Athaliana_flowering_genes"
trees <- as.character(unique(new.samps.red$tree_ID))
nr.clusters <- c(19, 9, 16, 15)
names(nr.clusters) <- trees
i = 1
go.name <- paste0("Kmeans_tree", trees[i])
whole.clustering.org <- read.table(paste0("Plots_PerTree_Clustering/", "/Tree", trees[i],"/", "Kmeans_all_clustering.txt"), sep="\t", header=T)
whole.clustering <- data.frame(ID = rownames(whole.clustering.org), AT_ID = genes.full.description[rownames(whole.clustering.org), "AT_ID"] , clustering = whole.clustering.org[, paste0("CL", nr.clusters[i])])
whole.clustering <- whole.clustering[!is.na(whole.clustering$AT_ID),]
fisher.pvalues <- matrix(0, 1 ,nr.clusters[i])
colnames(fisher.pvalues) <- paste0( "CL", 1:nr.clusters[i])
fisher.table <- matrix(0,nr.clusters[i],6)
colnames(fisher.table) <- c("X1", "X2", "X3", "X4", "pvalues", "cluster.size")
for(cluster in 1:nr.clusters[i]){
#cluster <- 1
clustering.tmp <- whole.clustering
clustering.tmp$gene.set <- ifelse(whole.clustering$AT_ID %in%  gene.set, 1, 2)
clustering.tmp$clustering <- ifelse(whole.clustering$clustering==cluster, 1, 2)
fisher.x <- as.matrix(with(clustering.tmp, table(gene.set, clustering)))
fisher.out <- fisher.test(fisher.x, alternative="greater")
fisher.table[cluster, "pvalues"] <- fisher.out$p.value
fisher.pvalues[1, cluster] <- fisher.out$p.value
if(any(fisher.x < 15)){
fisher.table[cluster, "pvalues"] <- NA
fisher.pvalues[1, cluster] <- NA
}
fisher.table[cluster, "X1"] <- fisher.x[1,1]
fisher.table[cluster, "X2"] <- fisher.x[1,2]
fisher.table[cluster, "X3"] <- fisher.x[2,1]
fisher.table[cluster, "X4"] <- fisher.x[2,2]
fisher.table[cluster,  "cluster.size"] <- fisher.x[1,1] + fisher.x[2,1]
}
cl.ord <- read.table(paste0("Plots_PerTree_Clustering/", "/Tree", trees[i],"/Clustering/", "CL",nr.clusters[i],"Kmeans_ClustOrder.txt"), sep="\t", header=FALSE)
cl.ord <- as.numeric(gsub("CL","" ,cl.ord[,2]))
fisher.table <- data.frame(cluster=1:nr.clusters[i], fisher.table)[cl.ord,]
write.table(fisher.table, paste0(out.dir,"/",  go.name , "_" , name.out, "_Fisher_pvalues.xls"), sep="\t", row.names=F)
fisher.pvalues.org <- fisher.pvalues
fisher.pvalues <- fisher.pvalues.org
fisher.pvalues.adj <- p.adjust(p=fisher.pvalues, method = "BH")
fisher.pvalues.adj <- matrix(fisher.pvalues.adj, dim(fisher.pvalues)[1], dim(fisher.pvalues)[2])
colnames(fisher.pvalues.adj) <- paste0( "CL", 1:nr.clusters[i])
fisher.pvalues.adj <- data.frame(gene.set="Athaliana.flowering.genes", fisher.pvalues.adj)
fisher.pvalues <- data.frame(gene.set="Athaliana.flowering.genes", fisher.pvalues)
write.table(fisher.pvalues, paste0(out.dir,"/", go.name , "_" ,"ALL_PVALUES_Fisher_pvalues.xls"), sep="\t", row.names=F)
write.table(fisher.pvalues.adj, paste0(out.dir,"/", go.name , "_" ,"ALL_PVALUES_Fisher_pvalues_ADJ.xls"), sep="\t", row.names=F)
trees
out.dir <- "Plots_FishersTest/Gene_sets/"
dir.create(out.dir, showWarnings=F, recursive=T)
gene.sets.dir <- paste0(dataPath, "GeneControlSets/gene_sets_for_Gosia/")
gene.sets.all <- dir(gene.sets.dir)
trees <- as.character(unique(new.samps.red$tree_ID))
nr.clusters <- c(19, 9, 16, 15)
names(nr.clusters) <- trees
i = 1
go.name <- paste0("Kmeans_tree", trees[i])
whole.clustering.org <- read.table(paste0("Plots_PerTree_Clustering/", "/Tree", trees[i],"/", "Kmeans_all_clustering.txt"), sep="\t", header=T)
whole.clustering <- data.frame(ID = rownames(whole.clustering.org), AT_ID = genes.full.description[rownames(whole.clustering.org), "AT_ID"] , clustering = whole.clustering.org[, paste0("CL", nr.clusters[i])])
whole.clustering <- whole.clustering[!is.na(whole.clustering$AT_ID),]
fisher.pvalues <- matrix(0, length(gene.sets.all),nr.clusters[i])
colnames(fisher.pvalues) <- paste0( "CL", 1:nr.clusters[i])
for(j in 1:length(gene.sets.all)){
# j=29
cat("\n", gene.sets.all[j], "\n")
file.data <- read.table(paste0(gene.sets.dir, "/", gene.sets.all[j]), header=T, sep=";", stringsAsFactors = FALSE)
print(head(file.data))
gene.set <- file.data[,1]
name.out <- gsub(".csv", "",gene.sets.all[j])
fisher.table <- matrix(0,nr.clusters[i],6)
colnames(fisher.table) <- c("X1", "X2", "X3", "X4", "pvalues", "cluster.size")
for(cluster in 1:nr.clusters[i]){
# cluster <- 1
clustering.tmp <- whole.clustering
clustering.tmp$gene.set <- ifelse(whole.clustering$AT_ID %in%  gene.set, 1, 2)
clustering.tmp$clustering <- ifelse(whole.clustering$clustering==cluster, 1, 2)
fisher.x <- as.matrix(with(clustering.tmp, table(gene.set, clustering)))
### !!! very inportant to set up alternative hipothesis
fisher.out <- fisher.test(fisher.x, alternative="greater")
fisher.table[cluster, "pvalues"] <- fisher.out$p.value
fisher.pvalues[j, cluster] <- fisher.out$p.value
if(any(fisher.x <= 15)){
fisher.table[cluster, "pvalues"] <- NA
fisher.pvalues[j, cluster] <- NA
}
fisher.table[cluster, "X1"] <- fisher.x[1,1]
fisher.table[cluster, "X2"] <- fisher.x[1,2]
fisher.table[cluster, "X3"] <- fisher.x[2,1]
fisher.table[cluster, "X4"] <- fisher.x[2,2]
fisher.table[cluster,  "cluster.size"] <- fisher.x[1,1] + fisher.x[2,1]
}
cl.ord <- read.table(paste0("Plots_PerTree_Clustering/", "/Tree", trees[i],"/Clustering/", "CL",nr.clusters[i],"Kmeans_ClustOrder.txt"), sep="\t", header=FALSE)
cl.ord <- as.numeric(gsub("CL","" ,cl.ord[,2]))
fisher.table <- data.frame(cluster=1:nr.clusters[i], fisher.table)
write.table(fisher.table[cl.ord,], paste0(out.dir,"/",  go.name , "_" , name.out, "_Fisher_pvalues.xls"), sep="\t", row.names=F)
}
fisher.pvalues.org <- fisher.pvalues
fisher.pvalues <- fisher.pvalues.org
fisher.pvalues.adj <- p.adjust(p=fisher.pvalues, method = "BH")
fisher.pvalues.adj <- matrix(fisher.pvalues.adj, dim(fisher.pvalues)[1], dim(fisher.pvalues)[2])
colnames(fisher.pvalues.adj) <- paste0( "CL", 1:nr.clusters[i])
fisher.pvalues.adj <- data.frame(gene.set=gene.sets.all, fisher.pvalues.adj[, cl.ord])
fisher.pvalues <- data.frame(gene.set=gene.sets.all, fisher.pvalues[, cl.ord])
write.table(fisher.pvalues, paste0(out.dir,"/", go.name , "_" ,"ALL_PVALUES_Fisher_pvalues.xls"), sep="\t", row.names=F)
write.table(fisher.pvalues.adj, paste0(out.dir,"/", go.name , "_" ,"ALL_PVALUES_Fisher_pvalues_ADJ.xls"), sep="\t", row.names=F)
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
all(colnames(x)==rownames(new.samps))
load(paste0("Plots_MeanForReplicates/" , "data.reduced" ,".RData"))
AT.genes <- unique(genes.full.description[!is.na(genes.full.description$Flowering), c("AT_ID", "AT_symbol")])
head(AT.genes)
AT.genes <- AT.genes[AT.genes$AT_ID %in% c("AT1G65480", "AT2G22540"),]
AT.id <- genes.full.description[!is.na(genes.full.description$AT_ID), c("ID","AT_ID")]
AT.id <- AT.id[AT.id$ID %in% c("GID031739_3527284", "GID037469_3529277"),]
x <- x.red
new.samps <- new.samps.red
all(colnames(x)==rownames(new.samps))
# trees.order <- trees.order[trees.order$legend %in% c("8266-drought-leaf_bud"), ]
library(edgeR)
d.org <- DGEList(x, group=new.samps$tree_ID)
d.org <- calcNormFactors(d.org)
d.cpm <- cpm(d.org, normalized.lib.sizes=TRUE)
# d.cpm.l <- log(d.cpm + min(d.cpm[d.cpm != 0]))
d.cpm.l <- log2(d.cpm + 1)
out.dir <- "Plots_of_flowering_genes/Reduced_data/"
dir.create(out.dir, showWarnings=F, recursive=T)
pdf(paste0(out.dir , "Flowering_genes_from_S4_table" ,".pdf"), h=5, w=10)
for(g in 1:nrow(AT.genes)){
# g=1
cat(paste(g, ", "))
genes <- AT.id[AT.id[,2] == AT.genes[g, 1], 1]
if(length(genes!=0)){
for(j in 1:length(genes)){
# j=1
plot(0, type="n", main=paste0(AT.genes[g, 1] ,"\n", AT.genes[g, 2] , "\n",  genes[j]) ,xlim=c(min(new.samps$time_nr), max(new.samps$time_nr)), ylim=c(min(na.omit(d.cpm[genes[j], ])), max(na.omit(d.cpm[genes[j], ]))), xlab="Time", ylab="Gene Expression in cpm", xaxt = "n")
axis(side=1, at=month.days[,2], labels=month.days[,1])
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = colors()[246])
for(t in trees.order$legend){
# t=trees.order$legend[1]
lines(new.samps$time_nr[new.samps$tree_legend == t], d.cpm[genes[j], new.samps$tree_legend == t] , col=trees.order$color[trees.order$legend==t], type="b", pch=trees.order$pch[trees.order$legend==t], cex=trees.order$cex[trees.order$legend==t], lwd=3)
}
legend("topright", legend = trees.order$legend, col=trees.order$color, cex=0.5, text.col=trees.order$color)
}
}
}
dev.off()
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
all(colnames(x)==rownames(new.samps))
#####################################################################################################
### MDS plots
#####################################################################################################
dim(x)
library(edgeR)
d <- DGEList(x, group=new.samps$tree_ID)
d <- calcNormFactors(d)
# make sure a gene is expressed (CPM > 1) in more samples
cps <- cpm(d, normalized.lib.sizes=TRUE)
d <- d[ rowSums( cps > 1 ) > 27, ]
dim(d$counts)
# plots: MDS,
library(ggplot2)
library(EDASeq)
library(ggdendro)
?plotRLE
?calcNormFactors
