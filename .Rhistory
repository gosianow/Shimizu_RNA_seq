RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
dir.create("Plots_Splines/", showWarnings=F, recursive=T)
source(paste0(RPath, "Kmeans_clustering_splines.R"))
RPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/R_Shimizu_RNA_seq/Shimizu_analysis_2014-12-03/"
dataPath <- "/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/Data/"
analysisPath <- "Analysis_2014-12-03"
analysisPath <- paste0("/Users/gosia/Dropbox/Shimizu_time_course_RNA_seq/Shimizu_RNA_seq/", analysisPath)
dir.create(analysisPath, showWarnings = FALSE)
setwd(analysisPath)
load("Shimizu_workspace.Rdata")
dir.create("Plots_VarianceMeanTrend/", showWarnings=F, recursive=T)
all(colnames(x)==rownames(new.samps))
dim(x)
library(edgeR)
d <- DGEList(x, group=new.samps$tree_ID)
d <- calcNormFactors(d)
# make sure a gene is expressed (CPM > 1) in more samples
cps <- cpm(d, normalized.lib.sizes=TRUE)
d <- d[ rowSums( cps > 10 ) > 10, ]
dim(d$counts)
d$counts  <- d$counts + 1
dcpm <- cpm(d, normalized.lib.sizes=TRUE)
pairs <- list(c("H6_8266_20081208", "H7_8266_20081208"), c("H8_8266_20090105", "H9_8266_20090105"), c("E4_8266_20090202", "F4_8266_20090202"), c("N1_8266_20090224", "N5_8266_20090224"), c("I9_970_20081216", "J1_970_20081216"), c("J2_970_20090207", "K9_970_20090207"))
head(dcpm)
i = 1
v <- abs(dcpm[, pairs[[i]][1]] - dcpm[,pairs[[i]][2]])
m <- Rowmeans(dcpm[, pairs[[i]]])
i = 1
v <- abs(dcpm[, pairs[[i]][1]] - dcpm[,pairs[[i]][2]])
m <- rowMeans(dcpm[, pairs[[i]]])
plot(v, m)
plot(log10(v), log10(m))
plot(log10(m), log10(v))
out.dir <- "Plots_VarianceMeanTrend/"
dir.create(out.dir, showWarnings=F, recursive=T)
pdf(paste0(out.dir, "SDMean.pdf"))
for(i in 1:length(pairs)){
# i = 1
v <- abs(dcpm[, pairs[[i]][1]] - dcpm[,pairs[[i]][2]])
m <- rowMeans(dcpm[, pairs[[i]]])
smoothScatter( log10(m), log10(v) , nrpoints = Inf, nbin = 500, xlab="mean" , ylab="sd", main = paste0(pairs[[i]], collapse = " , "))
abline(a = 0, b = 1, col = "red")
}
dev.off()
